[Main]
# Direction manual ou auto
Steering=manual
# Vitesse : manual ou auto
Throttle=manual
# Max Throttle Limit (30% du max de 10 000 : 3 000)
MaxThrottleLimit=3000
# Vitesse constante ?
ConstantThrottleActive=false
# Valeur de la vitesse lorsqu'elle est constante
ConstantThrottleValue=2000
# Base directory
Root=/home/pi/orchestrator
# Temps d'attente de l'arrêt des parts en millisecondes
WaitStop=3000
# Orchestrator pid file (doit être après la définition de Root)
pidfile=[Root]/run/orchestrator.pid

[Setup]
# Lancées seulement si aucune part ne tourne
# Créer un MMF de 3Mo vide
exec=dd if=/dev/zero of=/var/tmp/soatcarmmf.tmp bs=1024 count=3072 >/dev/null 2>&1
# Suppression des fichiers pids restant
exec=rm [Root]/run/*.pid >/dev/null 2>&1

[Camera]
# En python :
#dir=[Root]/parts/camera/python
#exec=python camera.py
#logfile=[Root]/log/py-camera.log
# Ou en Cpp :
dir=[Root]/parts/camera/cpp
exec=./camera
logfile=[Root]/log/cpp-camera.log
pidfile=[Root]/run/camera.pid

[Decision]
#dir=[Root]/parts/decision/cpp
#exec=autopilot
#logfile=[Root]/log/cpp-autopilot.log
#pidfile=[Root]/run/autopilot.pid

[Joystick]
# En python :
#dir=[Root]/parts/joystick/python
#exec=python joystick.py
#logfile=[Root]/log/py-joystick.log
# Ou en Cpp :
dir=[Root]/parts/joystick/cpp
exec=./joystick
logfile=[Root]/log/cpp-joystick.log
pidfile=[Root]/run/joystick.pid

[pwm]
dir=[Root]/parts/pwm/cpp
exec=./pwm
logfile=[Root]/log/cpp-pwm.log
pidfile=[Root]/run/pwm.pid


#[ultrasonic]

#[webserver]
# En node js
exec=node app.js
dir=[Root]/parts/webserver/node
logfile=[Root]/log/webserver.log
pidfile=[Root]/run/webserver.pid


[Teardown]
# supprimer les fichiers pid
exec=rm [Root]/run/*.pid >/dev/null 2>&1
